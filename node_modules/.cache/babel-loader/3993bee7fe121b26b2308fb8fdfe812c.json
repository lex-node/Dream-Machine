{"ast":null,"code":"import _slicedToArray from \"/home/derp/WebStorm/keron-gabriel-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/derp/WebStorm/keron-gabriel-react/src/Components/LoginForm.js\";\nimport { withFormik, Form, Field } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction LoginForm({\n  values,\n  errors,\n  touched,\n  isSubmitting,\n  status\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  useEffect(() => {\n    if (status) {\n      setUsers([...users, status]);\n    }\n  }, [status]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, touched.email && errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, errors.email), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, errors.password), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Save\")));\n}\n\nconst FormikForm = withFormik({\n  mapPropsToValues({\n    email,\n    password\n  }) {\n    return {\n      email: email || \"\",\n      password: password || \"\"\n    };\n  },\n\n  /*validationSchema: Yup.object().shape({\n      name: Yup.string()\n          .required(\"Name is required\"),\n      email: Yup.string()\n          .email(\"Email not valid\")\n          .required(\"Email is required\"),\n      password: Yup.string()\n          .min(16, \"Password must be 16 characters or longer\")\n          .required(\"Password is required\")\n  }),*/\n  handleSubmit(values, {\n    resetForm,\n    setStatus,\n    setSubmitting\n  }) {\n    axios.post(\"https://reqres.in/api/users_\", values).then(res => {\n      console.log(res.data); // Data was created successfully and logs to console\n\n      setStatus(res.data);\n      resetForm();\n      setSubmitting(false);\n    }).catch(err => {\n      console.log(err); // There was an error creating the data and logs to console\n\n      setSubmitting(false);\n    });\n  }\n\n})(LoginForm);\nexport default FormikForm;","map":{"version":3,"sources":["/home/derp/WebStorm/keron-gabriel-react/src/Components/LoginForm.js"],"names":["withFormik","Form","Field","React","useEffect","useState","axios","LoginForm","values","errors","touched","isSubmitting","status","users","setUsers","email","password","FormikForm","mapPropsToValues","handleSubmit","resetForm","setStatus","setSubmitting","post","then","res","console","log","data","catch","err"],"mappings":";;AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,KAA1B,QAAsC,QAAtC;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,SAAT,CAAmB;AAACC,EAAAA,MAAD;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA,YAA1B;AAAwCC,EAAAA;AAAxC,CAAnB,EAAoE;AAAA,oBACtCP,QAAQ,CAAC,EAAD,CAD8B;AAAA;AAAA,QACzDQ,KADyD;AAAA,QAClDC,QADkD;;AAGhEV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,MAAJ,EAAY;AACRE,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWD,MAAX,CAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACK,KAAR,IAAiBN,MAAM,CAACM,KAAxB,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,MAAM,CAACM,KAAX,CADtC,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,WAAW,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OAAO,CAACM,QAAR,IAAoBP,MAAM,CAACO,QAA3B,IAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,MAAM,CAACO,QAAX,CAD5C,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EASI;AAAQ,IAAA,QAAQ,EAAEL,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,CADJ,CADJ;AAeH;;AAED,MAAMM,UAAU,GAAGjB,UAAU,CAAC;AAC1BkB,EAAAA,gBAAgB,CAAC;AAACH,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAoB;AAChC,WAAO;AACHD,MAAAA,KAAK,EAAEA,KAAK,IAAI,EADb;AAEHC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI;AAFnB,KAAP;AAIH,GANyB;;AAO1B;;;;;;;;;;AAUAG,EAAAA,YAAY,CAACX,MAAD,EAAS;AAACY,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAT,EAAgD;AAExDhB,IAAAA,KAAK,CACAiB,IADL,CACU,8BADV,EAC0Cf,MAD1C,EAEKgB,IAFL,CAEUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EADS,CACc;;AACvBP,MAAAA,SAAS,CAACI,GAAG,CAACG,IAAL,CAAT;AACAR,MAAAA,SAAS;AACTE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAPL,EAQKO,KARL,CAQWC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,EADU,CACQ;;AAClBR,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAXL;AAaH;;AAhCyB,CAAD,CAAV,CAiChBf,SAjCgB,CAAnB;AAmCA,eAAeU,UAAf","sourcesContent":["import {withFormik, Form, Field} from \"formik\";\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\n\nfunction LoginForm({values, errors, touched, isSubmitting, status}) {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        if (status) {\n            setUsers([...users, status]);\n        }\n    }, [status]);\n\n    return (\n        <div>\n            <Form>\n                <div>\n                    {touched.email && errors.email && <p>{errors.email}</p>}\n                    <Field type=\"email\" name=\"email\" placeholder=\"Email\"/>\n                </div>\n                <div>\n                    {touched.password && errors.password && <p>{errors.password}</p>}\n                    <Field type=\"password\" name=\"password\" placeholder=\"Password\"/>\n                </div>\n                <button disabled={isSubmitting}>Save</button>\n            </Form>\n        </div>\n    );\n}\n\nconst FormikForm = withFormik({\n    mapPropsToValues({email, password}) {\n        return {\n            email: email || \"\",\n            password: password || \"\",\n        };\n    },\n    /*validationSchema: Yup.object().shape({\n        name: Yup.string()\n            .required(\"Name is required\"),\n        email: Yup.string()\n            .email(\"Email not valid\")\n            .required(\"Email is required\"),\n        password: Yup.string()\n            .min(16, \"Password must be 16 characters or longer\")\n            .required(\"Password is required\")\n    }),*/\n    handleSubmit(values, {resetForm, setStatus, setSubmitting}) {\n\n        axios\n            .post(\"https://reqres.in/api/users_\", values)\n            .then(res => {\n                console.log(res.data); // Data was created successfully and logs to console\n                setStatus(res.data);\n                resetForm();\n                setSubmitting(false);\n            })\n            .catch(err => {\n                console.log(err); // There was an error creating the data and logs to console\n                setSubmitting(false);\n            });\n\n    }\n})(LoginForm);\n\nexport default FormikForm;"]},"metadata":{},"sourceType":"module"}