{"ast":null,"code":"import _slicedToArray from \"/home/derp/WebStorm/keron-gabriel-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/derp/WebStorm/keron-gabriel-react/src/Components/ActiveUserDataPage.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\n/*let webApiUrl = 'https://sleeptrack.herokuapp/api/user/100';\nlet tokenStr = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAwL…Y1OH0.r92B_Sgm0DCGZ-Unc6esV5bticKyFvy98uiIFDm3hUs';\naxios.get(webApiUrl, { headers: {\"Authorization\" : `Bearer ${tokenStr}`} });*/\n\nconst ActiveUserDataPage = props => {\n  const _useEffect = useEffect([]),\n        _useEffect2 = _slicedToArray(_useEffect, 2),\n        user = _useEffect2[0],\n        setUser = _useEffect2[1];\n\n  useEffect(() => {\n    const id = \"100\";\n    let tokenStr = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAwL…Y1OH0.r92B_Sgm0DCGZ-Unc6esV5bticKyFvy98uiIFDm3hUs';\n    axios.get(\"https://sleeptrack.herokuapp.com/api/user/\".concat(id), {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(tokenStr)\n      }\n    }).then(response => {\n      setUser(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, user));\n};\n\nexport default ActiveUserDataPage;\n/*### Users\n\n* /api/user/:id \"GET\"\n\t1. Returns user that matches the params: id\n\t  * All the sleep data for that user is included an array of objects\n\t\t\t* {\n\t\t\t\t\tsleepData: [{}, {}]\n\t\t\t* }\n\t2. JWT must be in the header under \"authorize\"\n\t3. accessible by the user and admin\n* /api/user/:id \"PUT\"\n  1. Modifies user that matches the params: id\n\t2. Takes an object with the updated user values {id: , username: , password: }\n\t3. JWT must be in the header under \"authorize\"\n\t4. accessible by the user and admin\n\t5. On success returns the edited record\n\t6. checkpassword is required on the request.\n\t  * checks the password for authenticity before submitting the request\n\t\t  * {\n\t\t\t\t\tusername: \"example\",\n\t\t\t\t\tpassword: \"example\",\n\t\t\t\t\tbirthdate: \"example\",\n\t\t\t\t\tcheckpassword: \"current password of user\"\n\t\t\t  }\n\t\t* if username, password, or birthdate aren't changed, they don't need to be included in the request.\n\t\t\t* {\n\t\t\t\t\tbirthdate: \"example\",\n\t\t\t\t\tcheckpassword: \"current password of user\"\n\t\t\t  }\n\t\t* need to logout user after a username or password change\n* /api/user/:id \"DELETE\"\n  1. Deletes user that matches the params: id\n\t2. JWT must be in the header under \"authorize\"\n\t3. accessible by the user and admin\n\t4. On success returns the number of records deleted\n*/","map":{"version":3,"sources":["/home/derp/WebStorm/keron-gabriel-react/src/Components/ActiveUserDataPage.js"],"names":["React","useEffect","axios","ActiveUserDataPage","props","user","setUser","id","tokenStr","get","headers","then","response","data","catch","error","console"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA;;;;AAKA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAA,qBAERH,SAAS,CAAC,EAAD,CAFD;AAAA;AAAA,QAEzBI,IAFyB;AAAA,QAEnBC,OAFmB;;AAIhCL,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMM,EAAE,GAAE,KAAV;AACA,QAAIC,QAAQ,GAAG,sGAAf;AACAN,IAAAA,KAAK,CACAO,GADL,qDACsDF,EADtD,GAC4D;AAAEG,MAAAA,OAAO,EAAE;AAAC,0CAA4BF,QAA5B;AAAD;AAAX,KAD5D,EAEKG,IAFL,CAEUC,QAAQ,IAAI;AACdN,MAAAA,OAAO,CAACM,QAAQ,CAACC,IAAV,CAAP;AACH,KAJL,EAKKC,KALL,CAKWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAPL;AASH,GAZY,EAYV,EAZU,CAAT;AAcA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,IAAJ,CADJ,CADJ;AAMH,CAxBD;;AA0BA,eAAeF,kBAAf;AAEA","sourcesContent":["import React, {useEffect} from \"react\";\nimport axios from \"axios\";\n\n\n/*let webApiUrl = 'https://sleeptrack.herokuapp/api/user/100';\nlet tokenStr = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAwL…Y1OH0.r92B_Sgm0DCGZ-Unc6esV5bticKyFvy98uiIFDm3hUs';\naxios.get(webApiUrl, { headers: {\"Authorization\" : `Bearer ${tokenStr}`} });*/\n\n\nconst ActiveUserDataPage = props => {\n\n    const [user, setUser] = useEffect([]);\n\n    useEffect(() => {\n    const id =\"100\";\n    let tokenStr = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAwL…Y1OH0.r92B_Sgm0DCGZ-Unc6esV5bticKyFvy98uiIFDm3hUs';\n    axios\n        .get(`https://sleeptrack.herokuapp.com/api/user/${id}`, { headers: {\"Authorization\" : `Bearer ${tokenStr}`} })\n        .then(response => {\n            setUser(response.data);\n        })\n        .catch(error => {\n            console.error(error);\n        });\n\n}, []);\n\n    return (\n        <div>\n            <p>{user}</p>\n        </div>\n    )\n\n}\n\nexport default ActiveUserDataPage;\n\n/*### Users\n\n* /api/user/:id \"GET\"\n\t1. Returns user that matches the params: id\n\t  * All the sleep data for that user is included an array of objects\n\t\t\t* {\n\t\t\t\t\tsleepData: [{}, {}]\n\t\t\t* }\n\t2. JWT must be in the header under \"authorize\"\n\t3. accessible by the user and admin\n* /api/user/:id \"PUT\"\n  1. Modifies user that matches the params: id\n\t2. Takes an object with the updated user values {id: , username: , password: }\n\t3. JWT must be in the header under \"authorize\"\n\t4. accessible by the user and admin\n\t5. On success returns the edited record\n\t6. checkpassword is required on the request.\n\t  * checks the password for authenticity before submitting the request\n\t\t  * {\n\t\t\t\t\tusername: \"example\",\n\t\t\t\t\tpassword: \"example\",\n\t\t\t\t\tbirthdate: \"example\",\n\t\t\t\t\tcheckpassword: \"current password of user\"\n\t\t\t  }\n\t\t* if username, password, or birthdate aren't changed, they don't need to be included in the request.\n\t\t\t* {\n\t\t\t\t\tbirthdate: \"example\",\n\t\t\t\t\tcheckpassword: \"current password of user\"\n\t\t\t  }\n\t\t* need to logout user after a username or password change\n* /api/user/:id \"DELETE\"\n  1. Deletes user that matches the params: id\n\t2. JWT must be in the header under \"authorize\"\n\t3. accessible by the user and admin\n\t4. On success returns the number of records deleted\n*/"]},"metadata":{},"sourceType":"module"}