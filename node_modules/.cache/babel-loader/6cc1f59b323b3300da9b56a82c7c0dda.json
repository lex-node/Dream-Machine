{"ast":null,"code":"import _slicedToArray from \"/home/derp/WebStorm/keron-gabriel-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/derp/WebStorm/keron-gabriel-react/src/Components/RegistrationPage.js\";\nimport { withFormik, Form, Field } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction RegistrationForm({\n  isSubmitting,\n  status\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  useEffect(() => {\n    if (status) {\n      setUsers([...users, status]);\n    }\n  }, [status, users]);\n  return React.createElement(\"div\", {\n    className: \"reactContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Register Here\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"fieldContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"username\",\n    name: \"username\",\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"fieldContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"fieldContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"birthdate\",\n    name: \"birthdate\",\n    placeholder: \"Birthdate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Save\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Home\"));\n}\n\nconst RegistrationPage = withFormik({\n  mapPropsToValues({\n    username,\n    password\n  }) {\n    return {\n      username: username || \"\",\n      password: password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    email: Yup.string().email(\"Email not valid\").required(\"Email is required\"),\n    password: Yup.string().min(16, \"Password must be 16 characters or longer\").required(\"Password is required\")\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    setStatus,\n    setSubmitting\n  }) {\n    axios.post(\"https://sleeptrack.herokuapp.com/api/register\", values).then(res => {\n      console.log(res.data); // Data was created successfully and logs to console\n\n      setStatus(res.data);\n      resetForm();\n      setSubmitting(false);\n    }).catch(err => {\n      console.log(err); // There was an error creating the data and logs to console\n\n      setSubmitting(false);\n    });\n  }\n\n})(RegistrationForm);\nexport default RegistrationPage;\n/*\n* /api/register \"POST\"\n\t1. Registers a new user to the database\n  2. Takes an object with properties \"username\", \"password\"\n\t  * {username: \"lorem\", password: \"lorem\", birthdate: \"Standard Date such as 'new Date()'\" }\n\t  * all three are required\n* /api/login \"POST\"\n  1. Login existing user. Returns the web token.\n\t2. Takes an object with properties \"username\", \"password\"\n\t  * {username: \"lorem\", password: \"lorem\"}\n\t\t* both are reqired\n\t3. Successful login returns web token\n\t4. Unsuccessful returns an object with the error in question */","map":{"version":3,"sources":["/home/derp/WebStorm/keron-gabriel-react/src/Components/RegistrationPage.js"],"names":["withFormik","Form","Field","React","useEffect","useState","Link","axios","RegistrationForm","isSubmitting","status","users","setUsers","RegistrationPage","mapPropsToValues","username","password","validationSchema","Yup","object","shape","name","string","required","email","min","handleSubmit","values","resetForm","setStatus","setSubmitting","post","then","res","console","log","data","catch","err"],"mappings":";;AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,KAA1B,QAAsC,QAAtC;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,gBAAT,CAA0B;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAA1B,EAAkD;AAAA,oBACpBL,QAAQ,CAAC,EAAD,CADY;AAAA;AAAA,QACvCM,KADuC;AAAA,QAChCC,QADgC;;AAG9CR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,MAAJ,EAAY;AACRE,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWD,MAAX,CAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACA,MAAD,EAASC,KAAT,CAJM,CAAT;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,IAAI,EAAC,WAA7B;AAAyC,IAAA,WAAW,EAAC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,EAUI;AAAQ,IAAA,QAAQ,EAAEF,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,CAFJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAeI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,CADJ;AAmBH;;AAED,MAAMI,gBAAgB,GAAGb,UAAU,CAAC;AAChCc,EAAAA,gBAAgB,CAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAD,EAAuB;AACnC,WAAO;AACHD,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EADnB;AAEHC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI;AAFnB,KAAP;AAIH,GAN+B;;AAOhCC,EAAAA,gBAAgB,EAAEC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AACjCC,IAAAA,IAAI,EAAEH,GAAG,CAACI,MAAJ,GACDC,QADC,CACQ,kBADR,CAD2B;AAGjCC,IAAAA,KAAK,EAAEN,GAAG,CAACI,MAAJ,GACFE,KADE,CACI,iBADJ,EAEFD,QAFE,CAEO,mBAFP,CAH0B;AAMjCP,IAAAA,QAAQ,EAAEE,GAAG,CAACI,MAAJ,GACLG,GADK,CACD,EADC,EACG,0CADH,EAELF,QAFK,CAEI,sBAFJ;AANuB,GAAnB,CAPc;;AAiBhCG,EAAAA,YAAY,CAACC,MAAD,EAAS;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAT,EAAgD;AAExDvB,IAAAA,KAAK,CACAwB,IADL,CACU,+CADV,EAC2DJ,MAD3D,EAEKK,IAFL,CAEUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EADS,CACc;;AACvBP,MAAAA,SAAS,CAACI,GAAG,CAACG,IAAL,CAAT;AACAR,MAAAA,SAAS;AACTE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAPL,EAQKO,KARL,CAQWC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,EADU,CACQ;;AAClBR,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAXL;AAaH;;AAhC+B,CAAD,CAAV,CAiCtBtB,gBAjCsB,CAAzB;AAmCA,eAAeK,gBAAf;AAEA","sourcesContent":["import {withFormik, Form, Field} from \"formik\";\nimport React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\n\n\nfunction RegistrationForm({isSubmitting, status}) {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        if (status) {\n            setUsers([...users, status]);\n        }\n    }, [status, users]);\n\n    return (\n        <div className=\"reactContainer\">\n            <h1>Register Here</h1>\n            <Form>\n                <div className=\"fieldContainer\">\n                    <Field type=\"username\" name=\"username\" placeholder=\"Username\"/>\n                </div>\n                <div className=\"fieldContainer\">\n                    <Field type=\"password\" name=\"password\" placeholder=\"Password\"/>\n                </div>\n                <div className=\"fieldContainer\">\n                    <Field type=\"birthdate\" name=\"birthdate\" placeholder=\"Birthdate\"/>\n                </div>\n                <button disabled={isSubmitting}>Save</button>\n            </Form>\n            <br/>\n            <Link to=\"/\">Home</Link>\n        </div>\n    );\n}\n\nconst RegistrationPage = withFormik({\n    mapPropsToValues({username, password}) {\n        return {\n            username: username || \"\",\n            password: password || \"\",\n        };\n    },\n    validationSchema: Yup.object().shape({\n        name: Yup.string()\n            .required(\"Name is required\"),\n        email: Yup.string()\n            .email(\"Email not valid\")\n            .required(\"Email is required\"),\n        password: Yup.string()\n            .min(16, \"Password must be 16 characters or longer\")\n            .required(\"Password is required\")\n    }),\n    handleSubmit(values, {resetForm, setStatus, setSubmitting}) {\n\n        axios\n            .post(\"https://sleeptrack.herokuapp.com/api/register\", values)\n            .then(res => {\n                console.log(res.data); // Data was created successfully and logs to console\n                setStatus(res.data);\n                resetForm();\n                setSubmitting(false);\n            })\n            .catch(err => {\n                console.log(err); // There was an error creating the data and logs to console\n                setSubmitting(false);\n            });\n\n    }\n})(RegistrationForm);\n\nexport default RegistrationPage;\n\n/*\n* /api/register \"POST\"\n\t1. Registers a new user to the database\n  2. Takes an object with properties \"username\", \"password\"\n\t  * {username: \"lorem\", password: \"lorem\", birthdate: \"Standard Date such as 'new Date()'\" }\n\t  * all three are required\n* /api/login \"POST\"\n  1. Login existing user. Returns the web token.\n\t2. Takes an object with properties \"username\", \"password\"\n\t  * {username: \"lorem\", password: \"lorem\"}\n\t\t* both are reqired\n\t3. Successful login returns web token\n\t4. Unsuccessful returns an object with the error in question */\n"]},"metadata":{},"sourceType":"module"}